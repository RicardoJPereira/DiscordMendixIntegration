// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package mendixintegration.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import discord4j.core.DiscordClient;
import discord4j.core.event.domain.message.MessageCreateEvent;
import discord4j.core.object.entity.Message;

public class StartBot extends CustomJavaAction<java.lang.Boolean>
{
	private final java.lang.String Token;

	public StartBot(
		IContext context,
		java.lang.String _token
	)
	{
		super(context);
		this.Token = _token;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		DiscordClient client = DiscordClient.create(this.Token);

		 client.login().flatMapMany(gateway -> gateway.on(MessageCreateEvent.class))
	      .map(MessageCreateEvent::getMessage)
	      .filter(message -> "!ping".equals(message.getContent()))
	      .flatMap(Message::getChannel)
	      .flatMap(channel -> channel.createMessage("Pong!"))
	      .blockLast();
		 
		 return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "StartBot";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
